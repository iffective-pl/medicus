server {
    listen              443 ssl;
    server_name         dev.iffective.pl;

    ssl_certificate     ssl/public.key;
    ssl_certificate_key ssl/private.key;
    ssl_protocols       TLSv1.2 TLSv1.3;
    
    location / {
        proxy_pass https://portainer:9443;
    }
}

server {
    listen              443 ssl;
    server_name         medicus.iffective.pl;

    ssl_certificate     ssl/public.key;
    ssl_certificate_key ssl/private.key;
    ssl_protocols       TLSv1.2 TLSv1.3;

    location / {
        auth_basic "Strona w trakcie budowy";
        auth_basic_user_file .htpasswd; 
        proxy_pass http://medicus;
        proxy_http_version 1.1;
        proxy_set_header   Upgrade $http_upgrade;
        proxy_set_header   Connection keep-alive;
        proxy_set_header   Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Proto $scheme;
    }
}

server {
    listen              443 ssl;
    server_name         s3.iffective.pl;

    ssl_certificate     ssl/public.key;
    ssl_certificate_key ssl/private.key;
    ssl_protocols       TLSv1.2 TLSv1.3;

    location / {
        auth_basic "Strona w trakcie budowy";
        auth_basic_user_file .htpasswd; 
        proxy_pass http://s3:9000;
        proxy_http_version 1.1;
        proxy_set_header   Upgrade $http_upgrade;
        proxy_set_header   Connection keep-alive;
        proxy_set_header   Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Proto $scheme;
    }
}

server {
    listen              443 ssl;
    server_name         auth.iffective.pl;

    ssl_certificate     ssl/public.key;
    ssl_certificate_key ssl/private.key;
    ssl_protocols       TLSv1.2 TLSv1.3;

    location / {
        proxy_pass http://auth:8080;
        proxy_http_version 1.1;
        proxy_set_header   Upgrade $http_upgrade;
        proxy_set_header   Connection keep-alive;
        proxy_set_header   Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Proto $scheme;
    }
}

server {
    listen                 443 default_server ssl;
    ssl_certificate        ssl/public.key;
    ssl_certificate_key    ssl/private.key;
    ssl_protocols          TLSv1.2 TLSv1.3;
    
    return 444;
}